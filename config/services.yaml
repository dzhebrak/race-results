# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
    
    App\Serializer\NameConverter\RaceResultFinishTimeNameConverter: ~

    app.serializer.name_converter.race_result:
        class: Symfony\Component\Serializer\NameConverter\MetadataAwareNameConverter
        public: false
        arguments:
            $fallbackNameConverter: '@App\Serializer\NameConverter\RaceResultFinishTimeNameConverter'

    app.serializer.normalizer.race_result:
        class: ApiPlatform\Serializer\ItemNormalizer
        public: false
        arguments:
            $nameConverter: '@app.serializer.name_converter.race_result'

    app.serializer.serializer.import_race_results:
        public: false
        class: Symfony\Component\Serializer\Serializer
        arguments:
            $normalizers: ['@app.serializer.normalizer.race_result', '@App\Serializer\Normalizer\FinishTimeNormalizer']
            $encoders: ['@serializer.encoder.csv']
    
    App\State\RaceCreateStateProcessor:
        arguments:
            $serializer: '@app.serializer.serializer.import_race_results'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
